name: CI/CD Pipeline

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main, develop]

env:
  CARGO_TERM_COLOR: always
  NODE_VERSION: "18"
  RUST_VERSION: "1.70"

jobs:
  # 前端测试和构建
  frontend-test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: Check if frontend exists
        id: check-frontend
        run: |
          if [ -d "./frontend" ] && [ -f "./frontend/package.json" ]; then
            echo "exists=true" >> $GITHUB_OUTPUT
          else
            echo "exists=false" >> $GITHUB_OUTPUT
          fi

      - name: Install frontend dependencies
        if: steps.check-frontend.outputs.exists == 'true'
        working-directory: ./frontend
        run: |
          npm ci || npm install
        continue-on-error: true

      - name: Run ESLint
        if: steps.check-frontend.outputs.exists == 'true'
        working-directory: ./frontend
        run: npm run lint --if-present
        continue-on-error: true

      - name: Run frontend tests
        if: steps.check-frontend.outputs.exists == 'true'
        working-directory: ./frontend
        run: npm run test --if-present
        continue-on-error: true

      - name: Build frontend
        if: steps.check-frontend.outputs.exists == 'true'
        working-directory: ./frontend
        run: npm run build --if-present
        continue-on-error: true

      - name: Frontend status
        run: |
          if [ "${{ steps.check-frontend.outputs.exists }}" == "true" ]; then
            echo "✅ Frontend project found and processed"
          else
            echo "ℹ️ Frontend project not found, skipping frontend build"
          fi

  # 后端测试和构建
  backend-test:
    runs-on: ubuntu-latest

    services:
      mysql:
        image: mysql:8.0
        env:
          MYSQL_ROOT_PASSWORD: ci_test_password
          MYSQL_DATABASE: quantconsole_test
        ports:
          - 3306:3306
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: ${{ env.RUST_VERSION }}
          override: true
          components: rustfmt, clippy

      - name: Check if backend exists
        id: check-backend
        run: |
          if [ -d "./backend" ] && [ -f "./backend/Cargo.toml" ]; then
            echo "exists=true" >> $GITHUB_OUTPUT
          else
            echo "exists=false" >> $GITHUB_OUTPUT
          fi

      - name: Cache cargo registry
        if: steps.check-backend.outputs.exists == 'true'
        uses: actions/cache@v3
        with:
          path: ~/.cargo/registry
          key: ${{ runner.os }}-cargo-registry-${{ hashFiles('**/Cargo.lock') }}

      - name: Cache cargo index
        if: steps.check-backend.outputs.exists == 'true'
        uses: actions/cache@v3
        with:
          path: ~/.cargo/git
          key: ${{ runner.os }}-cargo-index-${{ hashFiles('**/Cargo.lock') }}

      - name: Cache cargo build
        if: steps.check-backend.outputs.exists == 'true'
        uses: actions/cache@v3
        with:
          path: backend/target
          key: ${{ runner.os }}-cargo-build-target-${{ hashFiles('**/Cargo.lock') }}

      - name: Check Rust formatting
        if: steps.check-backend.outputs.exists == 'true'
        working-directory: ./backend
        run: cargo fmt -- --check
        continue-on-error: true

      - name: Run Clippy
        if: steps.check-backend.outputs.exists == 'true'
        working-directory: ./backend
        run: cargo clippy -- -D warnings
        continue-on-error: true

      - name: Run backend tests
        if: steps.check-backend.outputs.exists == 'true'
        working-directory: ./backend
        env:
          # 注意：这是 CI 测试环境专用密码，不用于生产环境
          DATABASE_URL: mysql://root:ci_test_password@localhost:3306/quantconsole_test
          JWT_SECRET: test-secret-key-for-ci-environment-only
        run: cargo test
        continue-on-error: true

      - name: Build backend
        if: steps.check-backend.outputs.exists == 'true'
        working-directory: ./backend
        run: cargo build --release
        continue-on-error: true

      - name: Backend status
        run: |
          if [ "${{ steps.check-backend.outputs.exists }}" == "true" ]; then
            echo "✅ Backend project found and processed"
          else
            echo "ℹ️ Backend project not found, skipping backend build"
          fi

  # 安全扫描 (仅在PR时运行)
  security-scan:
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@master
        with:
          scan-type: "fs"
          scan-ref: "."
          format: "table"
        continue-on-error: true

      - name: Check for npm packages
        id: check-npm
        run: |
          if [ -f "./frontend/package.json" ]; then
            echo "exists=true" >> $GITHUB_OUTPUT
          else
            echo "exists=false" >> $GITHUB_OUTPUT
          fi

      - name: Setup Node.js for npm audit
        if: steps.check-npm.outputs.exists == 'true'
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: Run npm audit
        if: steps.check-npm.outputs.exists == 'true'
        working-directory: ./frontend
        run: |
          npm install --ignore-scripts
          npm audit --audit-level moderate
        continue-on-error: true

  # 构建状态总结
  build-summary:
    runs-on: ubuntu-latest
    needs: [frontend-test, backend-test]
    if: always()

    steps:
      - name: Build Summary
        run: |
          echo "# 构建状态总结 📊" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "| 任务 | 状态 |" >> $GITHUB_STEP_SUMMARY
          echo "|------|------|" >> $GITHUB_STEP_SUMMARY
          echo "| 前端测试 | ${{ needs.frontend-test.result }} |" >> $GITHUB_STEP_SUMMARY
          echo "| 后端测试 | ${{ needs.backend-test.result }} |" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY

          if [[ "${{ needs.frontend-test.result }}" == "success" && "${{ needs.backend-test.result }}" == "success" ]]; then
            echo "🎉 所有构建任务都成功完成！" >> $GITHUB_STEP_SUMMARY
          else
            echo "⚠️ 部分构建任务失败，请检查日志。" >> $GITHUB_STEP_SUMMARY
          fi
