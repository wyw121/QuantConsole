version: '3.8'

services:
  # MySQL 数据库
  mysql:
    image: mysql:8.0
    container_name: quantconsole-mysql-prod
    restart: unless-stopped
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: quantconsole
      MYSQL_USER: quantconsole
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
    volumes:
      - mysql_data:/var/lib/mysql
      - ./database/init.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - "3306:3306"
    networks:
      - quantconsole-network
    command: --default-authentication-plugin=mysql_native_password

  # Redis 缓存
  redis:
    image: redis:7-alpine
    container_name: quantconsole-redis-prod
    restart: unless-stopped
    command: redis-server --requirepass ${REDIS_PASSWORD}
    volumes:
      - redis_data:/data
    networks:
      - quantconsole-network

  # 后端服务
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile.prod
    container_name: quantconsole-backend-prod
    restart: unless-stopped
    environment:
      DATABASE_URL: mysql://quantconsole:${MYSQL_PASSWORD}@mysql:3306/quantconsole
      REDIS_URL: redis://:${REDIS_PASSWORD}@redis:6379
      JWT_SECRET: ${JWT_SECRET}
      RUST_LOG: info
    depends_on:
      - mysql
      - redis
    networks:
      - quantconsole-network

  # 前端服务
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile.prod
    container_name: quantconsole-frontend-prod
    restart: unless-stopped
    depends_on:
      - backend
    networks:
      - quantconsole-network

  # Nginx 反向代理
  nginx:
    image: nginx:alpine
    container_name: quantconsole-nginx-prod
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/ssl:/etc/nginx/ssl
    depends_on:
      - frontend
      - backend
    networks:
      - quantconsole-network

volumes:
  mysql_data:
  redis_data:

networks:
  quantconsole-network:
    driver: bridge
